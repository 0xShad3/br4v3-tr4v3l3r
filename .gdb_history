break game_logic.c:362
r
q
break game_logic.c:362
r
print buffer
print map->monsters_num 
print mons_arr[3]->isDead 
q
break game_logic.c:362
r
c
c
clear
r
r
q
break game_logic.c:362
r
print mons_arr[3].isDead 
q
break map.c:151
r
print mons_arr[3].isDead 
c
r
c
c
c
c
c
c
c
nest
n
n
n
c
c
q
break game_logic.c:
break game_logic.c:397
r
print mons_arr[3].isDead
step
step
step
atep
s
s
s
s
s
s
step
step
step
s
s
s
s
s
s
s
disass pass_object_values 
s
s
print mons_arr[3].isDead 
s
s
s
s
s
print mons_arr[3].isDead 
print mons_arr[3].isDead 
print mons_arr[2].isDead 
print mons_arr[1].isDead 
print mons_arr[0].isDead 
define hook stop
define hook-stop
print mons_arr[0].isDead
print mons_arr[1].isDead
print mons_arr[2].isDead
print mons_arr[3].isDead
end
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
print mons_buffer[i][MONS_ID]
print mons_buffer[i][1]
print mons_buffer[i][0]
print j
print mons_arr[3].monster_id
s
s
s
print i
print mons_buffer[3][1]
print mons_buffer[2][1]
mons_buffer[3 - 1][MONS_ID]
print mons_buffer[3 - 1][MONS_ID]
print mons_buffer[3 - 1][1]
print mons_buffer[3 - 1][0]
s
s
print j
print mons_buffer[0][1]
print mons_buffer[1][1]
print mons_buffer[2][1]
print mons_buffer[3][1]
print mons_arr[1].monster_id
print mons_arr[0].monster_id
print mons_arr[1].monster_id
print mons_arr[2].monster_id
print mons_arr[3].monster_id
print mons_arr[4].monster_id
print mons_arr[4].monster_id
print mons_arr[5].monster_id
break game_logic.c:316
r
print mons_buffer[0][1]
print mons_buffer[1][1]
print mons_buffer[2][1]
print mons_buffer[3][1]
print mons_buffer[4][1]
print mons_buffer[4][0]
print mons_buffer[4][1]
print mons_buffer[4][0]
print mons_buffer[0][0]
print mons_buffer[0][1]
print mons_buffer[1][0]
print mons_buffer[2][0]
print mons_buffer[3][0]
print mons_buffer[4][0]
print mons_buffer[5][0]
r
r
print mons_buffer[0][1]
print mons_buffer[1][1]
print mons_buffer[2][1]
print mons_buffer[3][1]
print mons_buffer[4][1]
define hook-stop
print mons_buffer[0][1]
print mons_buffer[1][1]
print mons_buffer[2][1]
print mons_buffer[3][1]
end
break game_logic.c:96
c
r
break game_logic.c:81
c
r
break game_logic.c:74
r
c
s
c
r
c
n
n
n
print mons_buffer[0][1]
print mons_buffer[1][1]
print mons_buffer[2][1]
print mons_buffer[3][1]
r
break map.c:20
x/200wx $rsp
x/200wx $rsp-200
x/200wx $rsp-3000
x/200wx $rsp-300
x/200wx $rsp-30
r
break map.c:96
c
c
c
x/200wx $rsp-300
s
s
s
n
n
n
n
n
n
n
n
c
r
clear
r
c
r
c
c
c
c
q
break game_logic.c:420
r
print mons_arr[3].isDead 
print mons_arr[2].isDead 
print mons_arr[3].isDead 
print mons_arr[0].isDead 
q
